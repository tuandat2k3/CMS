@page
@model CMS.Pages.Contract.ResignModel
@{
    ViewData["Title"] = "Hợp đồng sắp hết hạn của tôi";
    Layout = "_Layout";
}
<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
    <!-- Thêm link đến Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
</head>

<div class="container mt-3">
    @if (Model.ErrorMessage != null)
    {
        <div class="alert alert-danger">
            @Model.ErrorMessage
        </div>
    }

    @if (Model.Contracts == null || !Model.Contracts.Any())
    {
        <div class="alert alert-info" role="alert">
            Hiện chưa có hợp đồng nào sắp hết hạn
        </div>
    }
    else
    {
        <h3 class="text-center mb-4">Danh sách hợp đồng sắp hết hạn</h3>

        <table class="table table-bordered table-hover">
            <thead class="table-light">
                <tr class="bg-success bg-opacity-75 text-white">
                    <th>#</th>
                    <th>Tên hợp đồng</th>
                    <th>Loại</th>
                    <th>Trạng thái</th>
                    <th>Ngày bắt đầu</th>
                    <th>Ngày kết thúc</th>
                    <th>Số ngày còn lại</th>
                    <th>Giá trị (VNĐ)</th>
                    <th>Thao tác</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var contract in Model.Contracts)
                {
                    var daysLeft = (contract.EndDate.Value.Date - DateTime.Today).Days;

                    string badgeHtml = "";
                    if (daysLeft == 1)
                    {
                        badgeHtml = $"<small class='badge bg-danger text-white'><i class='far fa-clock'></i> {daysLeft} ngày</small>";
                    }
                    else if (daysLeft < 11)
                    {
                        badgeHtml = $"<small class='badge bg-danger text-white'><i class='far fa-clock'></i> {daysLeft} ngày</small>";
                    }
                    else if (daysLeft < 21)
                    {
                        badgeHtml = $"<small class='badge bg-warning text-dark'><i class='far fa-clock'></i> {daysLeft} ngày</small>";
                    }
                    else if (daysLeft < 31)
                    {
                        badgeHtml = $"<small class='badge bg-primary text-white'><i class='far fa-clock'></i> {daysLeft} ngày</small>";
                    }

                    <tr>
                        <td>@contract.ContractNumber</td>
                        <td>@contract.ContractName</td>
                        <td>@contract.ContractType</td>
                        <td>@contract.ContractStatus</td>
                        <td>@contract.StartDate?.ToString("dd/MM/yyyy")</td>
                        <td>@contract.EndDate?.ToString("dd/MM/yyyy")</td>
                        <td>@Html.Raw(badgeHtml)</td>
                        <td>@contract.ContractValue?.ToString("N0")</td>
                        <td>
                            <a href="javascript:void(0);" class="btn btn-info btn-sm view-contract" data-id="@contract.AutoID">
                                <i class="bi bi-eye-fill"></i>
                            </a>
                            <a href="javascript:void(0);" class="btn btn-primary btn-sm re-sign-contract" data-id="@contract.AutoID">
                                <i class="bi bi-arrow-repeat"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <!--Phan Trang-->
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                @if (Model.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Page("Resign", new {
                            pageNumber = Model.CurrentPage - 1,
                            startDateFrom = Request.Query["startDateFrom"],
                            startDateTo = Request.Query["startDateTo"],
                            status = Request.Query["status"],
                            keyword = Request.Query["keyword"],
                            type = Request.Query["type"],
                            minValue = Request.Query["minValue"],
                            maxValue = Request.Query["maxValue"]
                        })">Previous</a>
                    </li>
                }

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Page("Resign", new {
                            pageNumber = i,
                            startDateFrom = Request.Query["startDateFrom"],
                            startDateTo = Request.Query["startDateTo"],
                            status = Request.Query["status"],
                            keyword = Request.Query["keyword"],
                            type = Request.Query["type"],
                            minValue = Request.Query["minValue"],
                            maxValue = Request.Query["maxValue"]
                        })">@i</a>
                    </li>
                }

                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Page("Resign", new {
                            pageNumber = Model.CurrentPage + 1,
                            startDateFrom = Request.Query["startDateFrom"],
                            startDateTo = Request.Query["startDateTo"],
                            status = Request.Query["status"],
                            keyword = Request.Query["keyword"],
                            type = Request.Query["type"],
                            minValue = Request.Query["minValue"],
                            maxValue = Request.Query["maxValue"]
                        })">Next</a>
                    </li>
                }
            </ul>
        </nav>
    }
</div>

<form method="post">
    @Html.AntiForgeryToken()
</form>

<!-- Modal chi tiết hợp đồng -->
<div class="modal fade" id="contractDetailModal" tabindex="-1" aria-labelledby="contractDetailModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Chi tiết hợp đồng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <strong>Mã hợp đồng:</strong>
                        <span id="detail-contractNumber"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Tên hợp đồng:</strong>
                        <span id="detail-contractName"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Loại hợp đồng:</strong>
                        <span id="detail-contractType"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Trạng thái:</strong>
                        <span id="detail-contractStatus"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Ngày bắt đầu:</strong>
                        <span id="detail-startDate"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Ngày kết thúc:</strong>
                        <span id="detail-endDate"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Giá trị hợp đồng:</strong>
                        <span id="detail-contractValue"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Năm hợp đồng:</strong>
                        <span id="detail-contractYear"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Ngày ký hợp đồng:</strong>
                        <span id="detail-contractDate"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Thời gian ký:</strong>
                        <span id="detail-contractTime"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Đối tác:</strong>
                        <span id="detail-partner"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Công ty:</strong>
                        <span id="detail-company"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Chi nhánh:</strong>
                        <span id="detail-branch"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Phòng ban:</strong>
                        <span id="detail-department"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Người tạo:</strong>
                        <span id="detail-createBy"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Ngày tạo:</strong>
                        <span id="detail-createDate"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Cập nhật lần cuối bởi:</strong>
                        <span id="detail-lastUpdateBy"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Ngày cập nhật lần cuối:</strong>
                        <span id="detail-lastUpdateDate"></span>
                    </div>
                    <div class="col-12 mb-3">
                        <strong>Tổng giá trị hóa đơn (đã thanh toán):</strong>
                        <span id="detail-totalInvoiceValue"></span>
                    </div>
                    <div class="col-12 mb-3">
                        <strong>Trạng thái thanh toán:</strong>
                        <span id="detail-paymentStatus"></span>
                    </div>
                    <div class="col-12 mb-3">
                        <strong>Tệp đính kèm hợp đồng:</strong>
                        <div id="detail-contract-files" class="mt-2">
                            <!-- Contract files will be populated here -->
                        </div>
                    </div>
                    <div class="col-12 mb-3">
                        <strong>Tệp đính kèm hóa đơn:</strong>
                        <div id="detail-invoice-files" class="mt-2">
                            <!-- Invoice files will be populated here -->
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

<!-- Modal Tái ký hợp đồng -->
<div class="modal fade" id="reSignContractModal" tabindex="-1" aria-labelledby="reSignContractModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reSignContractModalLabel">Tái ký hợp đồng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="reSignContractForm" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="reSignContractId" name="contractId" />
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="reSignContractName" class="form-label">Tên hợp đồng <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="reSignContractName" name="ContractName" required />
                            </div>
                            <div class="mb-3">
                                <label for="reSignContractType" class="form-label">Loại hợp đồng <span class="text-danger">*</span></label>
                                <select class="form-select" id="reSignContractType" name="ContractType" required>
                                    <option value="Business">Business</option>
                                    <option value="Financial">Financial</option>
                                    <option value="Construction">Construction</option>
                                    <option value="HR">HR</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="reSignContractNumber" class="form-label">Mã hợp đồng <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="reSignContractNumber" name="ContractNumber" required />
                            </div>
                            <div class="mb-3">
                                <label for="reSignContractYear" class="form-label">Năm hợp đồng <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="reSignContractYear" name="ContractYear" required />
                            </div>
                            <div class="mb-3">
                                <label for="reSignContractValue" class="form-label">Giá trị hợp đồng</label>
                                <input type="number" class="form-control" id="reSignContractValue" name="ContractValue" />
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="mb-3">
                                <label for="reSignContractDate" class="form-label">Ngày ký hợp đồng <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="reSignContractDate" name="ContractDate" required />
                            </div>
                            <div class="mb-3">
                                <label for="reSignContractTime" class="form-label">Thời gian ký</label>
                                <input type="text" class="form-control" id="reSignContractTime" name="ContractTime" />
                            </div>
                            <div class="mb-3">
                                <label for="reSignStartDate" class="form-label">Ngày bắt đầu <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="reSignStartDate" name="StartDate" required />
                            </div>
                            <div class="mb-3">
                                <label for="reSignEndDate" class="form-label">Ngày kết thúc <span class="text-danger">*</span></label>
                                <input type="date" class="form-control" id="reSignEndDate" name="EndDate" required />
                            </div>
                            <div class="mb-3">
                                <label for="reSignPartnerName" class="form-label">Đối tác <span class="text-danger">*</span></label>
                                <input type="text" class="form-control" id="reSignPartnerName" name="PartnerName" readonly />
                                <input type="hidden" id="reSignPartnerID" name="PartnerID" />
                            </div>
                            <div class="mb-3">
                                <label for="reSignFiles" class="form-label">Tệp đính kèm hợp đồng <span class="text-danger">*</span></label>
                                <input type="file" class="form-control" id="reSignFiles" name="files" multiple accept=".pdf,.doc,.docx,.jpg,.png" required />
                            </div>
                        </div>
                    </div>
                    <!-- Phần thêm hóa đơn -->
                    <div class="mb-3">
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="addInvoiceCheckbox" onchange="toggleInvoiceFields()">
                            <label class="form-check-label" for="addInvoiceCheckbox">
                                Thêm hóa đơn kèm hợp đồng
                            </label>
                        </div>
                    </div>
                    <div id="invoiceFields" style="display: none;">
                        <h6>Thông tin hóa đơn</h6>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="invoiceName" class="form-label">Tên hóa đơn</label>
                                    <input type="text" class="form-control" id="invoiceName" name="InvoiceName" />
                                </div>
                                <div class="mb-3">
                                    <label for="issueDate" class="form-label">Ngày phát hành</label>
                                    <input type="date" class="form-control" id="issueDate" name="IssueDate" />
                                </div>
                                <div class="mb-3">
                                    <label for="dueDate" class="form-label">Ngày đến hạn</label>
                                    <input type="date" class="form-control" id="dueDate" name="DueDate" />
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="mb-3">
                                    <label for="invoiceValue" class="form-label">Giá trị hóa đơn</label>
                                    <input type="number" class="form-control" id="invoiceValue" name="InvoiceValue" />
                                </div>
                                <div class="mb-3">
                                    <label for="invoiceStatus" class="form-label">Trạng thái</label>
                                    <select class="form-select" id="invoiceStatus" name="InvoiceStatus">
                                        <option value="">Chọn trạng thái</option>
                                        <option value="Pending">Chưa thanh toán</option>
                                        <option value="Paid">Đã thanh toán</option>
                                    </select>
                                </div>
                                <div class="mb-3">
                                    <label for="invoiceFiles" class="form-label">Tệp đính kèm hóa đơn</label>
                                    <input type="file" class="form-control" id="invoiceFiles" name="invoiceFiles" multiple accept=".pdf,.doc,.docx,.jpg,.png" />
                                </div>
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button type="button" class="btn btn-primary" onclick="saveReSignContract()">Lưu</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-YvpcrYf0tY3lHB60NNkmXc5s9fDVZLESaAA55NDzOxhy9GkcIdslK1eN7N6jIeHz" crossorigin="anonymous"></script>
    <script>
        // Helper function to show modal
        function showModal(modalId) {
            if (typeof bootstrap === 'undefined' || !bootstrap.Modal) {
                console.error("Bootstrap Modal is not available.");
                alert("Lỗi: Không thể hiển thị modal.");
                return;
            }
            const modalElement = document.getElementById(modalId);
            if (modalElement) {
                new bootstrap.Modal(modalElement).show();
            } else {
                console.error(`Modal with ID ${modalId} not found.`);
            }
        }

        // Show Contract Detail Modal
        function showContractDetail(id) {
            console.log("Opening contract detail for ID:", id);
            fetch(`?handler=ContractDetail&id=${id}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                }
            })
            .then(res => {
                if (!res.ok) {
                    return res.text().then(text => {
                        throw new Error("Lỗi server: " + (text || res.statusText));
                    });
                }
                return res.json();
            })
            .then(data => {
                if (data.success) {
                    const contract = data.contract;
                    document.getElementById('detail-contractNumber').textContent = contract.contractNumber || '';
                    document.getElementById('detail-contractName').textContent = contract.contractName || '';
                    document.getElementById('detail-contractType').textContent = contract.contractType || '';
                    document.getElementById('detail-contractStatus').textContent = contract.contractStatus || '';
                    document.getElementById('detail-startDate').textContent = formatDate(contract.startDate) || '';
                    document.getElementById('detail-endDate').textContent = formatDate(contract.endDate) || '';
                    document.getElementById('detail-contractValue').textContent = formatNumber(contract.contractValue) + ' VNĐ' || '';
                    document.getElementById('detail-contractYear').textContent = contract.contractYear || '';
                    document.getElementById('detail-contractDate').textContent = formatDate(contract.contractDate) || '';
                    document.getElementById('detail-contractTime').textContent = contract.contractTime || '';
                    document.getElementById('detail-partner').textContent = contract.partnerName || '';
                    document.getElementById('detail-company').textContent = contract.companyName || '';
                    document.getElementById('detail-branch').textContent = contract.branchName || '';
                    document.getElementById('detail-department').textContent = contract.departmentName || '';
                    document.getElementById('detail-createBy').textContent = contract.createBy || '';
                    document.getElementById('detail-createDate').textContent = formatDate(contract.createDate) || '';
                    document.getElementById('detail-lastUpdateBy').textContent = contract.lastUpdateBy || '';
                    document.getElementById('detail-lastUpdateDate').textContent = formatDate(contract.lastUpdateDate) || '';
                    document.getElementById('detail-totalInvoiceValue').textContent = formatNumber(contract.totalInvoiceValue) + ' VNĐ' || '0 VNĐ';

                    // Calculate and display payment status
                    const contractValue = contract.contractValue || 0;
                    const totalInvoiceValue = contract.totalInvoiceValue || 0;
                    const paymentStatusElement = document.getElementById('detail-paymentStatus');
                    if (totalInvoiceValue >= contractValue && contractValue > 0) {
                        paymentStatusElement.textContent = 'Đã thanh toán xong';
                        paymentStatusElement.className = 'text-success';
                    } else if (totalInvoiceValue < contractValue) {
                        const remaining = contractValue - totalInvoiceValue;
                        paymentStatusElement.textContent = `Còn thiếu: ${formatNumber(remaining)} VNĐ`;
                        paymentStatusElement.className = 'text-danger';
                    } else {
                        paymentStatusElement.textContent = 'Chưa thanh toán';
                        paymentStatusElement.className = 'text-warning';
                    }

                    // Populate contract files
                    const contractFilesContainer = document.getElementById('detail-contract-files');
                    contractFilesContainer.innerHTML = '';
                    if (contract.contractFiles && contract.contractFiles.length > 0) {
                        contract.contractFiles.forEach(file => {
                            const fileElement = document.createElement('div');
                            fileElement.className = 'mb-1';
                            fileElement.innerHTML = `
                                <a href="?handler=DownloadFile&id=${file.autoID}" class="text-primary" download>
                                    <i class="bi bi-file-earmark-arrow-down"></i> ${file.fileName}
                                </a>
                            `;
                            contractFilesContainer.appendChild(fileElement);
                        });
                    } else {
                        contractFilesContainer.innerHTML = '<p>Không có tệp đính kèm</p>';
                    }

                    // Populate invoice files
                    const invoiceFilesContainer = document.getElementById('detail-invoice-files');
                    invoiceFilesContainer.innerHTML = '';
                    if (contract.invoiceFiles && contract.invoiceFiles.length > 0) {
                        contract.invoiceFiles.forEach(file => {
                            const fileElement = document.createElement('div');
                            fileElement.className = 'mb-1';
                            fileElement.innerHTML = `
                                <a href="?handler=DownloadFile&id=${file.autoID}" class="text-primary" download>
                                    <i class="bi bi-file-earmark-arrow-down"></i> ${file.fileName}
                                </a>
                            `;
                            invoiceFilesContainer.appendChild(fileElement);
                        });
                    } else {
                        invoiceFilesContainer.innerHTML = '<p>Không có tệp đính kèm hóa đơn</p>';
                    }

                    showModal('contractDetailModal');
                } else {
                    alert("Không thể lấy thông tin hợp đồng: " + (data.message || "Không xác định"));
                }
            })
            .catch(err => {
                console.error("Error fetching contract details:", err);
                alert("Lỗi: " + err.message);
            });
        }

        // Show Re-sign Contract Modal
        function showReSignContractModal(id) {
            console.log("Opening re-sign contract modal for ID:", id);
            fetch(`?handler=ContractDetail&id=${id}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(res => {
                if (!res.ok) {
                    return res.text().then(text => {
                        throw new Error("Lỗi server: " + (text || res.statusText));
                    });
                }
                return res.json();
            })
            .then(data => {
                if (data.success) {
                    const contract = data.contract;
                    document.getElementById('reSignContractId').value = contract.autoID;
                    document.getElementById('reSignContractName').value = contract.contractName || '';
                    document.getElementById('reSignContractType').value = contract.contractType || '';
                    document.getElementById('reSignContractNumber').value = contract.contractNumber || '';
                    document.getElementById('reSignContractYear').value = contract.contractYear || '';
                    document.getElementById('reSignContractValue').value = contract.contractValue || '';
                    document.getElementById('reSignContractDate').value = formatDateForInput(contract.contractDate) || '';
                    document.getElementById('reSignContractTime').value = contract.contractTime || '';
                    document.getElementById('reSignStartDate').value = formatDateForInput(contract.startDate) || '';
                    document.getElementById('reSignEndDate').value = formatDateForInput(contract.endDate) || '';
                    document.getElementById('reSignPartnerName').value = contract.partnerName || '';
                    document.getElementById('reSignPartnerID').value = contract.partnerID || '';

                    // Reset file input and invoice fields
                    document.getElementById('reSignFiles').value = '';
                    document.getElementById('addInvoiceCheckbox').checked = false;
                    toggleInvoiceFields();

                    showModal('reSignContractModal');
                } else {
                    alert("Không thể lấy thông tin hợp đồng: " + (data.message || "Không xác định"));
                }
            })
            .catch(err => {
                console.error("Error:", err);
                alert("Lỗi: " + err.message);
            });
        }

        // Format date for input
        function formatDateForInput(dateString) {
            if (!dateString) return '';
            const date = new Date(dateString);
            return date.toISOString().split('T')[0];
        }

        // Helper function to format date
        function formatDate(dateString) {
            if (!dateString) return '';
            const date = new Date(dateString);
            return date.toLocaleDateString('vi-VN');
        }

        // Helper function to format number
        function formatNumber(value) {
            if (value === null || value === undefined) return '';
            return new Intl.NumberFormat('vi-VN').format(value);
        }

        // Toggle Invoice Fields
        function toggleInvoiceFields() {
            const invoiceFields = document.getElementById('invoiceFields');
            const checkbox = document.getElementById('addInvoiceCheckbox');
            invoiceFields.style.display = checkbox.checked ? 'block' : 'none';
        }

        // Save re-signed contract
        function saveReSignContract() {
            const form = document.getElementById('reSignContractForm');
            if (!form.checkValidity()) {
                form.reportValidity();
                return;
            }

            const formData = new FormData(form);
            fetch('?handler=ReSignContract', {
                method: 'POST',
                headers: {
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: formData
            })
            .then(res => {
                if (!res.ok) {
                    return res.text().then(text => {
                        throw new Error("Lỗi server: " + text);
                    });
                }
                return res.json();
            })
            .then(data => {
                if (data.success) {
                    alert('Tái ký hợp đồng thành công');
                    location.reload();
                } else {
                    alert('Tái ký hợp đồng thất bại: ' + (data.message || 'Không xác định'));
                }
            })
            .catch(err => {
                console.error('Lỗi khi tái ký hợp đồng:', err);
                alert('Lỗi khi tái ký hợp đồng: ' + err.message);
            });
        }

        // Event delegation for view contract buttons
        document.addEventListener('click', function(e) {
            const button = e.target.closest('.view-contract');
            if (button) {
                const id = button.dataset.id;
                showContractDetail(id);
            }
        });

        // Event delegation for re-sign contract buttons
        document.addEventListener('click', function(e) {
            const button = e.target.closest('.re-sign-contract');
            if (button) {
                const id = button.dataset.id;
                showReSignContractModal(id);
            }
        });
    </script>
}