@page
@model CMS.Pages.Contract.ExpiringContractModel
@{
    ViewData["Title"] = "Hợp đồng sắp hết hạn";
    Layout = "_AdminLayout";
}
<head>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <!-- Thêm link đến Font Awesome -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
    <!-- Thêm Bootstrap CSS -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
</head>

<div class="container mt-3">
    <h3 class="text-center mb-4">Danh sách hợp đồng sắp hết hạn</h3>

    @if (Model.Contracts == null || !Model.Contracts.Any())
    {
        <div class="alert alert-info" role="alert">
            Hiện chưa có hợp đồng nào sắp hết hạn
        </div>
    }
    else
    {
        <table class="table table-bordered table-hover">
            <thead class="table-light">
                <tr class="bg-success bg-opacity-75 text-white">
                    <th>#</th>
                    <th>Name</th>
                    <th>Type</th>
                    <th>Status</th>
                    <th>StartDate</th>
                    <th>EndDate</th>
                    <th>Day left</th>
                    <th>Value (VNĐ)</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var contract in Model.Contracts)
                {
                    var daysLeft = (contract.EndDate.Value.Date - DateTime.Today).Days;

                    string badgeHtml = "";
                    if (daysLeft == 1)
                    {
                        badgeHtml = $"<small class='badge badge-danger'><i class='far fa-clock'></i> {daysLeft} day</small>";
                    }
                    else if (daysLeft < 11)
                    {
                        badgeHtml = $"<small class='badge badge-danger'><i class='far fa-clock'></i> {daysLeft} days</small>";
                    }
                    else if (daysLeft < 21)
                    {
                        badgeHtml = $"<small class='badge badge-warning'><i class='far fa-clock'></i> {daysLeft} days</small>";
                    }
                    else if (daysLeft < 31)
                    {
                        badgeHtml = $"<small class='badge badge-primary'><i class='far fa-clock'></i> {daysLeft} days</small>";
                    }

                    <tr>
                        <td>@contract.ContractNumber</td>
                        <td>@contract.ContractName</td>
                        <td>@contract.ContractType</td>
                        <td>@contract.ContractStatus</td>
                        <td>@contract.StartDate?.ToString("dd/MM/yyyy")</td>
                        <td>@contract.EndDate?.ToString("dd/MM/yyyy")</td>
                        <td>@Html.Raw(badgeHtml)</td>
                        <td>@contract.ContractValue?.ToString("N0")</td>
                        <td>
                            <a href="javascript:void(0);" class="btn btn-info btn-sm" onclick="showContractDetail(@contract.AutoID)">
                                <i class="bi bi-eye-fill"></i>
                            </a>
                            <a href="javascript:void(0);" class="btn btn-success btn-sm" onclick="sendExpiryEmail(@contract.AutoID)">
                                <i class="bi bi-envelope-fill"></i>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center">
                @if (Model.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Page("ExpiringContract", new { pageNumber = Model.CurrentPage - 1 })">Previous</a>
                    </li>
                }

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Page("ExpiringContract", new { pageNumber = i })">@i</a>
                    </li>
                }

                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Page("ExpiringContract", new { pageNumber = Model.CurrentPage + 1 })">Next</a>
                    </li>
                }
            </ul>
        </nav>
    }

</div>

<form method="post">
    @Html.AntiForgeryToken()
</form>

<!-- Modal chi tiết -->
<div class="modal fade" id="contractDetailModal" tabindex="-1" aria-labelledby="contractDetailModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Chi tiết hợp đồng</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <strong>Mã hợp đồng:</strong>
                        <span id="detail-contractNumber"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Tên hợp đồng:</strong>
                        <span id="detail-contractName"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Loại hợp đồng:</strong>
                        <span id="detail-contractType"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Trạng thái:</strong>
                        <span id="detail-contractStatus"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Ngày bắt đầu:</strong>
                        <span id="detail-startDate"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Ngày kết thúc:</strong>
                        <span id="detail-endDate"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Giá trị hợp đồng:</strong>
                        <span id="detail-contractValue"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Năm hợp đồng:</strong>
                        <span id="detail-contractYear"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Ngày ký hợp đồng:</strong>
                        <span id="detail-contractDate"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Thời gian ký:</strong>
                        <span id="detail-contractTime"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Đối tác:</strong>
                        <span id="detail-partner"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Công ty:</strong>
                        <span id="detail-company"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Chi nhánh:</strong>
                        <span id="detail-branch"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Phòng ban:</strong>
                        <span id="detail-department"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Người tạo:</strong>
                        <span id="detail-createBy"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Ngày tạo:</strong>
                        <span id="detail-createDate"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Cập nhật lần cuối bởi:</strong>
                        <span id="detail-lastUpdateBy"></span>
                    </div>
                    <div class="col-md-6 mb-3">
                        <strong>Ngày cập nhật lần cuối:</strong>
                        <span id="detail-lastUpdateDate"></span>
                    </div>
                    <div class="col-12 mb-3">
                        <strong>Tổng giá trị hóa đơn (đã thanh toán):</strong>
                        <span id="detail-totalInvoiceValue"></span>
                    </div>
                    <div class="col-12 mb-3">
                        <strong>Trạng thái thanh toán:</strong>
                        <span id="detail-paymentStatus"></span>
                    </div>
                    <div class="col-12 mb-3">
                        <strong>Tệp đính kèm hợp đồng:</strong>
                        <div id="detail-contract-files" class="mt-2">
                            <!-- Contract files will be populated here -->
                        </div>
                    </div>
                    <div class="col-12 mb-3">
                        <strong>Tệp đính kèm hóa đơn:</strong>
                        <div id="detail-invoice-files" class="mt-2">
                            <!-- Invoice files will be populated here -->
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Helper function to show modal
        function showModal(modalId) {
            if (typeof bootstrap === 'undefined' || !bootstrap.Modal) {
                console.error("Bootstrap Modal is not available.");
                alert("Lỗi: Không thể hiển thị modal.");
                return;
            }
            const modalElement = document.getElementById(modalId);
            if (modalElement) {
                new bootstrap.Modal(modalElement).show();
            } else {
                console.error(`Modal with ID ${modalId} not found.`);
            }
        }

        // Show Contract Detail Modal
        function showContractDetail(id) {
            console.log("Opening contract detail for ID:", id);
            fetch(`?handler=ContractDetail&id=${id}`, {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json',
                    'Accept': 'application/json'
                }
            })
            .then(res => {
                if (!res.ok) {
                    return res.text().then(text => {
                        throw new Error("Lỗi server: " + (text || res.statusText));
                    });
                }
                return res.json();
            })
            .then(data => {
                if (data.success) {
                    const contract = data.contract;
                    document.getElementById('detail-contractNumber').textContent = contract.contractNumber || '';
                    document.getElementById('detail-contractName').textContent = contract.contractName || '';
                    document.getElementById('detail-contractType').textContent = contract.contractType || '';
                    document.getElementById('detail-contractStatus').textContent = contract.contractStatus || '';
                    document.getElementById('detail-startDate').textContent = formatDate(contract.startDate) || '';
                    document.getElementById('detail-endDate').textContent = formatDate(contract.endDate) || '';
                    document.getElementById('detail-contractValue').textContent = formatNumber(contract.contractValue) + ' VNĐ' || '';
                    document.getElementById('detail-contractYear').textContent = contract.contractYear || '';
                    document.getElementById('detail-contractDate').textContent = formatDate(contract.contractDate) || '';
                    document.getElementById('detail-contractTime').textContent = contract.contractTime || '';
                    document.getElementById('detail-partner').textContent = contract.partnerName || '';
                    document.getElementById('detail-company').textContent = contract.companyName || '';
                    document.getElementById('detail-branch').textContent = contract.branchName || '';
                    document.getElementById('detail-department').textContent = contract.departmentName || '';
                    document.getElementById('detail-createBy').textContent = contract.createBy || '';
                    document.getElementById('detail-createDate').textContent = formatDate(contract.createDate) || '';
                    document.getElementById('detail-lastUpdateBy').textContent = contract.lastUpdateBy || '';
                    document.getElementById('detail-lastUpdateDate').textContent = formatDate(contract.lastUpdateDate) || '';
                    document.getElementById('detail-totalInvoiceValue').textContent = formatNumber(contract.totalInvoiceValue) + ' VNĐ' || '0 VNĐ';

                    // Calculate and display invoice status
                    const contractValue = contract.contractValue || 0;
                    const totalInvoiceValue = contract.totalInvoiceValue || 0;
                    const paymentStatusElement = document.getElementById('detail-paymentStatus');
                    if (totalInvoiceValue >= contractValue && contractValue > 0) {
                        paymentStatusElement.textContent = 'Đã thanh toán xong';
                        paymentStatusElement.className = 'text-success';
                    } else if (totalInvoiceValue < contractValue) {
                        const remaining = contractValue - totalInvoiceValue;
                        paymentStatusElement.textContent = `Còn thiếu: ${formatNumber(remaining)} VNĐ`;
                        paymentStatusElement.className = 'text-danger';
                    } else {
                        paymentStatusElement.textContent = 'Chưa thanh toán';
                        paymentStatusElement.className = 'text-warning';
                    }

                    // Clear previous files
                    const contractFilesContainer = document.getElementById('detail-contract-files');
                    contractFilesContainer.innerHTML = '';
                    if (contract.contractFiles && contract.contractFiles.length > 0) {
                        contract.contractFiles.forEach(file => {
                            const fileElement = document.createElement('div');
                            fileElement.className = 'mb-1';
                            fileElement.innerHTML = `
                                <a href="?handler=DownloadFile&id=${file.autoID}" class="text-primary" download>
                                    <i class="bi bi-file-earmark-arrow-down"></i> ${file.fileName}
                                </a>
                            `;
                            contractFilesContainer.appendChild(fileElement);
                        });
                    } else {
                        contractFilesContainer.innerHTML = '<p>Không có tệp đính kèm</p>';
                    }

                    const invoiceFilesContainer = document.getElementById('detail-invoice-files');
                    invoiceFilesContainer.innerHTML = '';
                    if (contract.invoiceFiles && contract.invoiceFiles.length > 0) {
                        contract.invoiceFiles.forEach(file => {
                            const fileElement = document.createElement('div');
                            fileElement.className = 'mb-1';
                            fileElement.innerHTML = `
                                <a href="?handler=DownloadFile&id=${file.autoID}" class="text-primary" download>
                                    <i class="bi bi-file-earmark-arrow-down"></i> ${file.fileName}
                                </a>
                            `;
                            invoiceFilesContainer.appendChild(fileElement);
                        });
                    } else {
                        invoiceFilesContainer.innerHTML = '<p>Không có tệp đính kèm hóa đơn</p>';
                    }

                    showModal('contractDetailModal');
                } else {
                    alert("Không thể lấy thông tin hợp đồng: " + (data.message || "Không xác định"));
                }
            })
            .catch(err => {
                console.error("Error fetching contract details:", err);
                alert("Lỗi: " + err.message);
            });
        }

        // Helper function to format date
        function formatDate(dateString) {
            if (!dateString) return '';
            const date = new Date(dateString);
            return date.toLocaleDateString('vi-VN');
        }

        // Helper function to format number
        function formatNumber(value) {
            if (value === null || value === undefined) return '';
            return new Intl.NumberFormat('vi-VN').format(value);
        }

        async function sendExpiryEmail(id) {
            if (!confirm("Gửi email nhắc nhở cho nhân viên phụ trách?")) return;

            try {
                const res = await fetch(`?handler=SendExpiryNotification&id=${id}`, {
                    method: 'POST',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    }
                });
                const result = await res.json();
                alert(result.success ? "✅ " + result.message : "❌ " + result.message);
            } catch (err) {
                alert("Lỗi khi gửi email: " + err);
            }
        }
    </script>
}